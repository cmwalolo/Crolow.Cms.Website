@using Crolow.Cms.Core.Extensions;
@using Crolow.Cms.Core.HtmlHelpers.Dictionary
@using Microsoft.AspNetCore.Mvc.ViewComponents
@using Umbraco.Cms.Core.Models.Blocks
@inject IViewComponentSelector ViewComponentSelector
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IEnumerable<BlockGridItem>>
@{
    if (Model?.Any() != true) { return; }
}

<div class="umb-block-grid__layout-container">
    @foreach (var item in Model)
    {
        
        <div
            class="umb-block-grid__layout-item"
            data-content-element-type-alias="@item.Content.ContentType.Alias"
            data-content-element-type-key="@item.Content.ContentType.Key"
            data-element-udi="@item.ContentUdi"
            data-col-span="@item.ColumnSpan"
            data-row-span="@item.RowSpan"
            style=" --umb-block-grid--item-column-span: @item.ColumnSpan; --umb-block-grid--item-row-span: @item.RowSpan; ">
            @{
                var partialViewName = "~/Views/Partials/blockgrid/Components/" + item.Content.ContentType.Alias + ".cshtml";
                var alias = item.Content.ContentType.Alias;
                try
                {
                    if (ViewComponentSelector.SelectComponent(alias) != null)
                    {
                        @await Component.InvokeAsync(alias, new { content = UmbracoContext.PublishedRequest.PublishedContent, item = item.Content })
                        // ✅ Prefer component if it exists
                    }
                    else if (this.Context.ViewExists(partialViewName))
                    {
                        // ✅ Fall back to partial if no component
                        @await Html.PartialAsync(partialViewName, item)
                    }
                    else
                    {
                        <p>
                            <strong>Could not render component of type: @alias</strong><br />
                            No component and no partial view found at <em>@partialViewName</em>.
                        </p>
                    }
                }
                catch (Exception ex)
                {
                    <p>
                        <strong>Error rendering block: @alias</strong>
                    </p>
                    <p>@ex.Message</p>
                }

            }
        </div>
    }
</div>
